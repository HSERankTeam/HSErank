components_manager:
    coro_pool:
        initial_size: 500             # Preallocate 500 coroutines at startup.
        max_size: 1000                # Do not keep more than 1000 preallocated coroutines.
 
    task_processors:                  # Task processor is an executor for coroutine tasks
 
        main-task-processor:          # Make a task processor for CPU-bound couroutine tasks.
            worker_threads: 4         # Process tasks in 4 threads.
            thread_name: main-worker  # OS will show the threads of this task processor with 'main-worker' prefix.
 
        fs-task-processor:            # Make a separate task processor for filesystem bound tasks.
            thread_name: fs-worker
            worker_threads: 4
 
    default_task_processor: main-task-processor
 
    components:                       # Configuring components that were registered via component_list
        server:
            listener:                 # configuring the main listening socket...
                port: 8080            # ...to listen on this port and...
                task_processor: main-task-processor    # ...process incoming requests on this task processor.
        logging:
            fs-task-processor: fs-task-processor
            loggers:
                default:
                    file_path: '@stderr'
                    level: error
                    overflow_behavior: discard  # Drop logs if the system is too busy to write them down.
 
        tracer:                           # Component that helps to trace execution times and requests in logs.
            service-name: hello-service   # "You know. You all know exactly who I am. Say my name. " (c)
 
        dynamic-config:                      # Dynamic config storage options, do nothing
            fs-cache-path: ''
        dynamic-config-fallbacks:            # Load options from file and push them into the dynamic config storage.
            fallback-path: dynamic_config.json
 
        handler-updatedb:             # Finally! Our handler.
            path: /updatedb                  # Registering handler by URL '/hello'.
            method: GET              # It will only reply to GET (HEAD) and POST requests.
            task_processor: main-task-processor  # Run it on CPU bound task processor
          
        database:
            dbconnection: SECRET
            blocking_task_processor: fs-task-processor
            dns_resolver: async

        handler-ping:
            path: /ping
            method: GET
            task_processor: main-task-processor
            throttling_enabled: false
            url_trailing_slash: strict-match
          
        testsuite-support:

        dns-client:
            fs-task-processor: fs-task-processor

        http-client:                      # Component to do HTTP requests
            fs-task-processor: fs-task-processor
            user-agent: 'andrejj-dblpservice-debug'    # Set 'User-Agent' header to 'fbs-service 1.0'.
            dns_resolver: 'async'

            